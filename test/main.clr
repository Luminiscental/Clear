
// TODO: Actual tests !!!

struct Unit {}
val unit1 = Unit {};
val unit2 = Unit {};

print unit1 == unit1;
print unit2 == unit2;
print unit1 == unit2;
print;

print "Counting down:";

var i = 10i;
while (i > 0i) {
    print str(i) + "...";
    i = i - 1i;
}

print "Done!";
print;

struct Point {
    int x;
    int y;

    func to_str() str {
        return "(" + str(this.x) + ", " + str(this.y) + ")";
    }
}

struct Rectangle {
    Point a;
    Point b;

    func to_str() str {
        return this.a.to_str() + "->" + this.b.to_str();
    }

    func width() int {
        val result = this.a.x - this.b.x;
        if (result > 0i) {
            return result;
        } else {
            return -result;
        }
    }

    func height() int {
        val result = this.a.y - this.b.y;
        if (result > 0i) {
            return result;
        } else {
            return -result;
        }
    }

    func area() int {
        return this.width() * this.height();
    }

    func display() void {
        print this.to_str() + " has area " + str(this.area());
    }
}

val unit_square = Rectangle { a=Point { x=0i, y=0i }, b=Point { x=1i, y=1i } };
unit_square.display();

val long_rect = Rectangle { a=Point { x=1i, y=3i }, b=Point { x=10i, y=2i } };
long_rect.display();

